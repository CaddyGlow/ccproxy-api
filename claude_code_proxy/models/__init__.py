"""Pydantic models for Claude Proxy API Server."""

from .openai import (
    OpenAIChatCompletionRequest,
    OpenAIChatCompletionResponse,
    OpenAIChoice,
    OpenAIErrorDetail,
    OpenAIErrorResponse,
    OpenAIFunction,
    OpenAILogprobs,
    OpenAIMessage,
    OpenAIMessageContent,
    OpenAIModelInfo,
    OpenAIModelsResponse,
    OpenAIResponseFormat,
    OpenAIResponseMessage,
    OpenAIStreamingChatCompletionResponse,
    OpenAIStreamingChoice,
    OpenAIStreamOptions,
    OpenAITool,
    OpenAIToolCall,
    OpenAIToolChoice,
    OpenAIUsage,
)
from .requests import (
    ChatCompletionRequest,
    ImageContent,
    Message,
    MessageContent,
    TextContent,
    ToolDefinition,
    Usage,
)
from .responses import (
    APIError,
    AuthenticationError,
    ChatCompletionResponse,
    Choice,
    ErrorResponse,
    InternalServerError,
    InvalidRequestError,
    NotFoundError,
    OverloadedError,
    RateLimitError,
    ResponseContent,
    StreamingChatCompletionResponse,
    StreamingChoice,
    TextResponse,
    ToolCall,
    ToolUse,
)


__all__ = [
    # Request models
    "ChatCompletionRequest",
    "ImageContent",
    "Message",
    "MessageContent",
    "TextContent",
    "ToolDefinition",
    "Usage",
    # Response models
    "APIError",
    "AuthenticationError",
    "ChatCompletionResponse",
    "Choice",
    "ErrorResponse",
    "InternalServerError",
    "InvalidRequestError",
    "NotFoundError",
    "OverloadedError",
    "RateLimitError",
    "ResponseContent",
    "StreamingChatCompletionResponse",
    "StreamingChoice",
    "TextResponse",
    "ToolCall",
    "ToolUse",
    # OpenAI-compatible models
    "OpenAIChatCompletionRequest",
    "OpenAIChatCompletionResponse",
    "OpenAIChoice",
    "OpenAIErrorDetail",
    "OpenAIErrorResponse",
    "OpenAIFunction",
    "OpenAILogprobs",
    "OpenAIMessage",
    "OpenAIMessageContent",
    "OpenAIModelInfo",
    "OpenAIModelsResponse",
    "OpenAIResponseFormat",
    "OpenAIResponseMessage",
    "OpenAIStreamingChatCompletionResponse",
    "OpenAIStreamingChoice",
    "OpenAIStreamOptions",
    "OpenAITool",
    "OpenAIToolCall",
    "OpenAIToolChoice",
    "OpenAIUsage",
]
